name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: ${{ matrix.os }} â€¢ Qt ${{ matrix.qt-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        qt-version: [ "6.6.3" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Qt ${{ matrix.qt-version }}
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt-version }}
          cache: true

      - name: Install Linux build dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgl1-mesa-dev

      - name: Install Boost on Ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get update && sudo apt-get install -y libboost-all-dev

      - name: Install Boost on macOS
        if: startsWith(matrix.os, 'macos')
        run: brew install boost

      - name: Set up vcpkg (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: microsoft/setup-vcpkg@v1

      - name: Install Boost on Windows
        if: startsWith(matrix.os, 'windows')
        run: vcpkg install boost:x64-windows

      - name: Configure (CMake) [non-Windows]
        if: ${{ !startsWith(matrix.os, 'windows') }}
        run: |
          cmake -S . -B build \
                -DCMAKE_BUILD_TYPE=Release \
                -D CMAKE_PREFIX_PATH="${{ env.Qt6_DIR }}"

      - name: Configure (CMake) [Windows]
        if: startsWith(matrix.os, 'windows')
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -D CMAKE_PREFIX_PATH="${{ env.Qt6_DIR }}" -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}\\scripts\\buildsystems\\vcpkg.cmake"

      - name: Build (Release)
        run: cmake --build build --config Release --target CognitivePipelines -j 2
