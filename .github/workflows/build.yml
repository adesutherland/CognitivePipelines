name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: ${{ matrix.os }} â€¢ Qt ${{ matrix.qt-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        qt-version: [ "6.6.3" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Qt ${{ matrix.qt-version }}
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt-version }}
          cache: true

      - name: Install build dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake libtool pkg-config autoconf-archive

      # macOS uses Homebrew (unchanged)
      - name: Install Boost and cpr on macOS
        if: startsWith(matrix.os, 'macos')
        run: brew install boost cpr

      # Linux: setup vcpkg and install dependencies
      - name: Install dependencies via vcpkg [Ubuntu]
        if: startsWith(matrix.os, 'ubuntu')
        uses: lukka/run-vcpkg@v11

      # Windows: setup vcpkg and install dependencies
      - name: Install dependencies via vcpkg [Windows]
        if: startsWith(matrix.os, 'windows')
        uses: lukka/run-vcpkg@v11

      # Configure steps
      - name: Configure (CMake) [Ubuntu]
        if: startsWith(matrix.os, 'ubuntu')
        run: >
          cmake -B ${{ github.workspace }}/build
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake

      - name: Configure (CMake) [macOS]
        if: startsWith(matrix.os, 'macos')
        run: |
          cmake -S . -B build \
                -DCMAKE_BUILD_TYPE=Release \
                -D CMAKE_PREFIX_PATH="${{ env.Qt6_DIR }}"

      - name: Configure (CMake) [Windows]
        if: startsWith(matrix.os, 'windows')
        run: >
          cmake -B ${{ github.workspace }}/build
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake

      # Build steps
      - name: Build (Release) [Ubuntu/Windows]
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'windows')
        run: cmake --build ${{ github.workspace }}/build --config Release --target CognitivePipelines -j 2

      - name: Build (Release) [macOS]
        if: startsWith(matrix.os, 'macos')
        run: cmake --build build --config Release --target CognitivePipelines -j 2
