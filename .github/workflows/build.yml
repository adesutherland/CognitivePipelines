name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: ${{ matrix.os }} â€¢ Qt ${{ matrix.qt-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        qt-version: [ "6.6.3" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Qt ${{ matrix.qt-version }}
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt-version }}
          cache: true

      - name: Install build dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake libtool pkg-config autoconf-archive

      - name: Install build dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install autoconf automake libtool pkg-config gettext autoconf-archive ninja
          # Ensure gettext tools (autopoint, msg*) are visible
          echo "$(brew --prefix)/opt/gettext/bin" >> $GITHUB_PATH
          # Ensure aclocal can see Homebrew macro dirs (gettext & general)
          echo "ACLOCAL_PATH=$(brew --prefix)/share/aclocal:$(brew --prefix gettext)/share/aclocal" >> $GITHUB_ENV

      - name: Install dependencies via vcpkg
        uses: lukka/run-vcpkg@v11
        env:
          VCPKG_BINARY_SOURCES: "clear;nuget,GitHub,readwrite"
          NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
          VCPKG_KEEP_ENV_VARS: "ACLOCAL_PATH,PATH"

      - name: Configure (CMake)
        run: >
          cmake -S . -B ${{ github.workspace }}/build
          -G Ninja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake
          -DCMAKE_PREFIX_PATH="${{ env.Qt6_DIR }}"

      - name: Build (Release)
        run: cmake --build ${{ github.workspace }}/build --config Release --target CognitivePipelines -j 2
